75+5
75+5
?regexp
install.packages(c("rscproxy","rcom"),repos="http://rcom.univie.ac.at/download",lib=.Library)
library(rcom)
comRegisterRegistry()
comRegisterRegistry()
keyword<-"BRK"
pl.data <- read.csv("C:\Users\Ilya\Desktop\EmbraerMock - FlightLogs.csv")
pl.data <- read.csv(C:\Users\Ilya\Desktop\EmbraerMock - FlightLogs.csv)
pl.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - FlightLogs.csv")
View(pl.data)
fhdb.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - FHDB.csv")
qar.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - QAR.csv")
View(pl.data)
pl.data$FULL_DATE<-strptime(pl.data$FULL_DATE, format='%Y-%m-%d')
View(pl.data)
pl.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - FlightLogs.csv")
pl.data$FULL_DATE<-format(pl.data$FULL_DATE, format='%Y-%m-%d')
View(pl.data)
pl.data$FULL_DATE<-format(pl.data$FULL_DATE, format='%Y-%m-%d')
View(pl.data)
View(fhdb.data)
fhdb.data$DATE_TIME<-strptime(fhdb.data$DATE_TIME, format='%Y-%m-%d %H:%M:%S')
View(fhdb.data)
pl.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - FlightLogs.csv")
fhdb.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - FHDB.csv")
qar.data <- read.csv("C:/Users/Ilya/Desktop/EmbraerMock - QAR.csv")
View(pl.data)
pl.data$FULL_DATE<-strptime(pl.data$FULL_DATE, format='%m/%d/%Y')
View(pl.data)
fhdb.data$DATE_TIME<-strptime(fhdb.data$DATE_TIME, format='%m/%d/%Y %H:%M:%S')
View(fhdb.data)
qar.data$DATE_TIME<-strptime(qar.data$DATE_TIME, format='%m/%d/%Y %H:%M:%S')
View(qar.data)
res_1<-pl.data[grep(keyword, pl.data$ACTION_DESCRIPTION),]
View(res_1)
dates<-res_1$FULL_DATE
res_2<-fhdb.data[grepl(keyword, fhdb.data$FAULT_MESSAGE) & format(fhdb.data$DATE_TIME, '%Y-%m-%d') %in% dates,]
View(res_2)
dates_2<-res_2$DATE_TIME
res_3<-qar.data[(qar.data$DATE_TIME %in% dates_2,]
res_3<-qar.data[(qar.data$DATE_TIME %in% dates_2),]
View(res_3)
View(qar.data)
res_3<-qar.data[format(qar.data$DATE_TIME, '%Y-%m-%d %H:%M') %in% dates_2,]
View(res_3)
res_3<-qar.data[format(qar.data$DATE_TIME, '%Y-%m-%d %H:%M') %in% format(dates_2, '%Y-%m-%d %H:%M'),]
View(res_3)
View(res_3)
class(res_3$DATE_TIME)<-charachter
class(res_3$DATE_TIME)<-"charachter"
class(res_3$DATE_TIME)<-"numeric"
class(res_3$DATE_TIME)<-"text"
as.Date(res_3$DATE_TIME)
View(res_3)
View(res_2)
View(res_2)
res_3<-qar.data[format(qar.data$DATE_TIME, '%Y-%m-%d %H:%M') %in% format(dates_2, '%Y-%m-%d %H:%M'),]
View(res_3)
View(res_3)
write.csv(res_3, file = "C:/Users/Ilya/Desktop/Result.csv")
library(stringr)
adata<-read.csv("activity.csv")
adata$interval<-str_pad(adata$interval, 4, pad = "0")
adata$interval<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2', adata$interval)
adata$datetime<-paste(adata$date, adata$interval, " ")
adata$datetime<-strptime(adata$datetime,"%Y-%m-%d %H:%M")
setwd("~/GitHub/RepData_PeerAssessment1")
library(stringr)
adata<-read.csv("activity.csv")
adata$interval<-str_pad(adata$interval, 4, pad = "0")
adata$interval<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2', adata$interval)
adata$datetime<-paste(adata$date, adata$interval, " ")
adata$datetime<-strptime(adata$datetime,"%Y-%m-%d %H:%M")
aggr_adata_d<-aggregate(steps~date, data=adata,FUN=sum, na.rm=TRUE)
hist(aggr_adata_d$steps)
mean(aggr_adata_d$steps)
median(aggr_adata_d$steps)
aggr_adata_m<-aggregate(steps~interval, data=adata,FUN=mean, na.rm=TRUE)
aggr_adata_m$interval <- as.POSIXct(aggr_adata_m$interval , format="%H:%M")
plot(aggr_adata_m$interval, aggr_adata_m$steps, type="l", xaxt="n", xlab="Time of Day")
axis.POSIXct(1, at=c(seq(min(aggr_adata_m$interval),max(aggr_adata_m$interval),by="hour"),max(aggr_adata_m$time)), format="%H")
format(aggr_adata_m$interval[aggr_adata_m$steps==max(aggr_adata_m$steps)],"%H:%M")
library(stringr)
adata<-read.csv("activity.csv")
adata$interval<-str_pad(adata$interval, 4, pad = "0")
adata$interval<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2', adata$interval)
adata$datetime<-paste(adata$date, adata$interval, " ")
adata$datetime<-strptime(adata$datetime,"%Y-%m-%d %H:%M")
aggr_adata_d<-aggregate(steps~date, data=adata,FUN=sum, na.rm=TRUE)
hist(aggr_adata_d$steps)
mean(aggr_adata_d$steps)
median(aggr_adata_d$steps)
```{r}
aggr_adata_m<-aggregate(steps~interval, data=adata,FUN=mean, na.rm=TRUE)
aggr_adata_m$interval <- as.POSIXct(aggr_adata_m$interval , format="%H:%M")
plot(aggr_adata_m$interval, aggr_adata_m$steps, type="l", xaxt="n", xlab="Time of Day")
axis.POSIXct(1, at=c(seq(min(aggr_adata_m$interval),max(aggr_adata_m$interval),by="hour"),max(aggr_adata_m$time)), format="%H")
format(aggr_adata_m$interval[aggr_adata_m$steps==max(aggr_adata_m$steps)],"%H:%M")
View(aggr_adata_m)
max(aggr_adata_m$time)
aggr_adata_m<-aggregate(steps~interval, data=adata,FUN=mean, na.rm=TRUE)
aggr_adata_m$interval <- as.POSIXct(aggr_adata_m$interval , format="%H:%M")
plot(aggr_adata_m$interval, aggr_adata_m$steps, type="l", xaxt="n", xlab="Time of Day")
axis.POSIXct(1, at=c(seq(min(aggr_adata_m$interval),max(aggr_adata_m$interval),by="hour"),max(aggr_adata_m$interval)), format="%H")
format(aggr_adata_m$interval[aggr_adata_m$steps==max(aggr_adata_m$steps)],"%H:%M")
length(adata$steps[is.na(adata$steps)])
adata_t<-transform(adata,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
steps))
aggr_adata_t_d<-aggregate(steps~date, data=adata_t,FUN=sum, na.rm=TRUE)
hist(aggr_adata_t_d$steps)
mean(aggr_adata_t_d$steps)
median(aggr_adata_t_d$steps)
library(lattice)
adata_t$day_type<-as.factor(ifelse(weekdays(adata_t$datetime)=="Saturday"|
weekdays(adata_t$datetime)=="Sunday",
"weekend",
"weekday"))
aggr_adata_t_m_w<-aggregate(steps~interval+day_type, data=adata_t,FUN=mean, na.rm=TRUE)
aggr_adata_t_m_w$interval <- as.POSIXct(aggr_adata_t_m_w$interval , format="%H:%M")
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,layout=c(1,2))
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2))
axis.POSIXct(1, at=c(seq(min(aggr_adata_t_m_w$interval),max(aggr_adata_t_m_w$interval),
by="hour"),max(aggr_adata_t_m_w$interval)), format="%H")
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2),
scales=list(
x=list(at= seq(as.POSIXct(interval), by="hour"),
labels=format(seq(as.POSIXct(interval), by="hour"),
"%H"))))
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2),
scales=list(x=list(labels=format("%H"))))
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2),
scales=list(x=list(at= as.numeric(interval),
labels=format(interval, "%H"))))
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2),
scales=list(x=list(at= as.numeric(aggr_adata_t_m_w$interval),
labels=format(aggr_adata_t_m_w$interval, "%H"))))
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2),
scales=list(
x=list(at= seq(as.POSIXct(aggr_adata_t_m_w$interval), by="hour"),
labels=format(seq(as.POSIXct(aggr_adata_t_m_w$interval), by="hour"),
"%H"))))
xyplot(steps~interval|day_type,data=aggr_adata_t_m_w,type="l",layout=c(1,2),
scales=list(
x=list(at= seq(min(aggr_adata_t_m_w$interval),max(aggr_adata_t_m_w$interval),
by="hour"),
labels=format(seq(min(aggr_adata_t_m_w$interval),max(aggr_adata_t_m_w$interval),
by="hour"),
"%H"))))
library(stringr)
activity<-read.csv("activity.csv")
activity$interval<-str_pad(activity$interval, 4, pad = "0")
activity$interval<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2', activity$interval)
activity$datetime<-paste(activity$date, activity$interval, " ")
activity$datetime<-strptime(activity$datetime,"%Y-%m-%d %H:%M")
library(stringr)
activity<-read.csv("activity.csv")
activity$interval<-str_pad(activity$interval, 4, pad = "0")
activity$interval<-gsub('^([0-9]{2})([0-9]+)$', '\\1:\\2', activity$interval)
activity$datetime<-paste(activity$date, activity$interval, " ")
activity$datetime<-strptime(activity$datetime,"%Y-%m-%d %H:%M")
aggr_activity_date<-aggregate(steps~date, data=activity,FUN=sum, na.rm=TRUE)
hist(aggr_activity_date$steps)
mean(aggr_activity_date$steps)
median(aggr_activity_date$steps)
aggr_activity_5min<-aggregate(steps~interval, data=activity,FUN=mean, na.rm=TRUE)
aggr_activity_5min$interval <- as.POSIXct(aggr_activity_5min$interval ,
format="%H:%M")
plot(aggr_activity_5min$interval, aggr_activity_5min$steps, type="l", xaxt="n",
xlab="Time of Day")
axis.POSIXct(1, at=c(seq(min(aggr_activity_5min$interval),
max(aggr_activity_5min$interval),by="hour"),
max(aggr_activity_5min$interval)),
format="%H")
format(aggr_activity_5min$interval[aggr_activity_5min$steps==
max(aggr_activity_5min$steps)],
"%H:%M")
plot(aggr_activity_5min$interval, aggr_activity_5min$steps, type="l", xaxt="n",
xlab="time of day", ylab="steps")
axis.POSIXct(1, at=c(seq(min(aggr_activity_5min$interval),
max(aggr_activity_5min$interval),by="hour"),
max(aggr_activity_5min$interval)),
format="%H")
format(aggr_activity_5min$interval[aggr_activity_5min$steps==
max(aggr_activity_5min$steps)],
"%H:%M")
axis.POSIXct(1, at=c(seq(min(aggr_activity_5min$interval),
max(aggr_activity_5min$interval),by="hour")),
format="%H")
plot(aggr_activity_5min$interval, aggr_activity_5min$steps, type="l", xaxt="n",
xlab="time of day", ylab="steps")
axis.POSIXct(1, at=c(seq(min(aggr_activity_5min$interval),
max(aggr_activity_5min$interval),by="hour")),
format="%H")
length(activity$steps[is.na(activity$steps)])
activity2<-transform(activity,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x)
mean(x, na.rm = TRUE)),
steps))
aggr_activity2_date<-aggregate(steps~date, data=activity2,FUN=sum, na.rm=TRUE)
hist(aggr_activity2_date$steps)
mean(aggr_activity2_date$steps)
median(aggr_activity2_date$steps)
hist(aggr_activity2_date$steps, xlab="steps")
library(lattice)
activity2$day_type<-as.factor(ifelse(weekdays(activity2$datetime)=="Saturday"|
weekdays(activity2$datetime)=="Sunday",
"weekend",
"weekday"))
aggr_activity2_5min_daytype<-aggregate(steps~interval+day_type, data=activity2,
FUN=mean, na.rm=TRUE)
aggr_activity2_5min_daytype$interval <-
as.POSIXct(aggr_activity2_5min_daytype$interval, format="%H:%M")
xyplot(steps~interval|day_type,data=aggr_activity2_5min_daytype,type="l",
layout=c(1,2),
scales=list(
x=list(at= seq(min(aggr_activity2_5min_daytype$interval),
max(aggr_activity2_5min_daytype$interval),
by="hour"),
labels=format(seq(min(aggr_activity2_5min_daytype$interval),
max(aggr_activity2_5min_daytype$interval),
by="hour"),
"%H"))))
xyplot(steps~interval|day_type,data=aggr_activity2_5min_daytype,type="l",
xlab="time of day", layout=c(1,2),
scales=list(
x=list(at= seq(min(aggr_activity2_5min_daytype$interval),
max(aggr_activity2_5min_daytype$interval),
by="hour"),
labels=format(seq(min(aggr_activity2_5min_daytype$interval),
max(aggr_activity2_5min_daytype$interval),
by="hour"),
"%H"))))
xyplot(steps~interval,data=aggr_activity_5min,type="l",
xlab="time of day",
scales=list(
x=list(at= seq(min(aggr_activity_5min$interval),
max(aggr_activity_5min$interval),
by="hour"),
labels=format(seq(min(aggr_activity_5min$interval),
max(aggr_activity_5min$interval),
by="hour"),
"%H"))))
rnorm(10000)
matrix(rnorm(100),10)
matrix(rnorm(10),10)
matrix
?matrix
rnorm(10)
matrix(rnorm(10),100)
rnorm(10)
hist(aggr_activity_date$steps,xlab="steps",breaks=100)
hist(aggr_activity_date$steps,xlab="steps",breaks=1000)
hist(aggr_activity_date$steps,xlab="steps",breaks=10000)
hist(aggr_activity_date$steps,xlab="steps",breaks=1)
hist(aggr_activity_date$steps,xlab="steps",breaks=10)
hist(aggr_activity_date$steps,xlab="steps",breaks=5)
hist(aggr_activity_date$steps,xlab="steps",breaks=100)
hist(aggr_activity_date$steps,xlab="steps",breaks=10)
hist(aggr_activity2_date$steps, xlab="steps",breaks=10)
hist(aggr_activity2_date$steps, xlab="steps")
hist(aggr_activity_date$steps,xlab="steps")
mean(aggr_activity_date$steps)
median(aggr_activity_date$steps)
xyplot(steps~interval|day_type,data=aggr_activity2_5min_daytype,type="l",
xlab="time of day", layout=c(1,2),
scales=list(
x=list(at= seq(min(aggr_activity2_5min_daytype$interval),
max(aggr_activity2_5min_daytype$interval),
by="hour"),
labels=format(seq(min(aggr_activity2_5min_daytype$interval),
max(aggr_activity2_5min_daytype$interval),
by="hour"),
"%H"))))
ggr_activity_5min$interval[ggr_activity_5min$steps==max(ggr_activity_5min$steps)]
aggr_activity_5min$interval[aggr_activity_5min$steps==max(aggr_activity_5min$steps)]
format(aggr_activity_5min$interval[aggr_activity_5min$steps
==max(aggr_activity_5min$steps)],
"%H:%M")
tapply(aggr_activity2_5min_daytype$steps,aggr_activity2_5min_daytype$day_type, mean)
